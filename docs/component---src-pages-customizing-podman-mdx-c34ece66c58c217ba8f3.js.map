{"version":3,"file":"component---src-pages-customizing-podman-mdx-c34ece66c58c217ba8f3.js","mappings":"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","sources":["webpack://example/./src/pages/customizing-podman.mdx","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/aliceip/Documents/GitHub/workflow-process-service-trial/github-pages/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Table of contents`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#customizing-the-hostname-and-port\"\n        }}>{`Customizing the hostname and port`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#changing-the-admin-password\"\n        }}>{`Changing the admin password`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#persisting-your-data\"\n        }}>{`Persisting your data`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#customizing-the-user-registry\"\n        }}>{`Customizing the user registry`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#enabling-full-text-search-and-dashboard-support\"\n        }}>{`Enabling full text search and dashboard support`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#cleaning-up-the-environment\"\n        }}>{`Cleaning up the environment`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#overriding-the-liberty-default-configuration\"\n        }}>{`Overriding the Liberty default configuration`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#integrating-with-external-services\"\n        }}>{`Integrating with external services`}</a>{` `}</li>\n    </ul>\n    <h2>{`Customizing the hostname and port`}</h2>\n    <p>{`If you want to access Workplace or Studio from a web browser that’s not running on the Podman host, edit the  `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` file to set the `}<inlineCode parentName=\"p\">{`EXTERNAL_HOSTNAME`}</inlineCode>{` environment variable to the actual IP or hostname of your Podman host. `}</p>\n    <p>{`You can also customize the external port used to expose the Workflow Process Service APIs. If you want to change the external port, you can’t use localhost as the `}<inlineCode parentName=\"p\">{`EXTERNAL_HOSTNAME`}</inlineCode>{`. To change the external port, take both of these two actions:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Set the `}<inlineCode parentName=\"p\">{`EXTERNAL_HTTPS_PORT`}</inlineCode>{` environment variable in the `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` file to the port number of your choice.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Change the host port declared in the `}<inlineCode parentName=\"p\">{`services.pc.ports`}</inlineCode>{` section to make it match the `}<inlineCode parentName=\"p\">{`EXTERNAL_HTTPS_PORT`}</inlineCode>{` environment variable value. `}</p>\n        <p parentName=\"li\">{` For example, to set the host port to 7443:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`[...]\n  pc:\n    [...]\n    ports:\n      - \"7443:9443\"\n    [...]\n    environment:\n    [...]\n      - EXTERNAL_HTTPS_PORT=7443\n[...]\n`}</code></pre>\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`EXTERNAL_HTTPS_PORT`}</inlineCode>{` is the first number under `}<inlineCode parentName=\"p\">{`ports`}</inlineCode>{` in the docker-compose.yml file:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`ports:\n      - \"7443:9443\"\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`After updating `}<inlineCode parentName=\"p\">{`EXTERNAL_HOSTNAME`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`EXTERNAL_HTTPS_PORT`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` file, if you already had an existing environment, follow these steps for the change to take effect:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Run the  `}<inlineCode parentName=\"li\">{`podman-compose down`}</inlineCode>{` command to stop and delete the environment.`}</li>\n      <li parentName=\"ol\">{`If you are using persistent data, delete the `}<inlineCode parentName=\"li\">{`tls`}</inlineCode>{` folder in your workspace and `}<inlineCode parentName=\"li\">{`tls`}</inlineCode>{` folder under data/generated/ in your workspace.`}</li>\n      <li parentName=\"ol\">{`Run the  `}<inlineCode parentName=\"li\">{`podman-compose up`}</inlineCode>{` command to start the environment. `}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` The container will use the same DNS server as the host computer, but the hostname and IP mappings in the /etc/hosts file won’t be passed to the container automatically. If the hostname of your host machine is not added to the DNS server, you can configure the container to use the hostname and IP mappings by adding information similar to the following information in the docker-compose.yml file:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`#############################################################################################################\n# The \"pc\" container is running the Workflow Process Service (authoring trial) image\n#############################################################################################################\npc:\n  ...\n\n  extra_hosts:\n    - <hostname>:<host_ipaddress>\n`}</code></pre>\n    <p>{`If you are on Windows, you also need to set up port forwarding on your machine to access the service on the default distribution on your Windows Subsystem for Linux (WSL 2).  `}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the following command in the WSL 2 terminal to get your WSL 2 IP address:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`ifconfig eth0|head -n2|grep inet|awk '{print$2}'\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In your Windows terminal, run the following command, replacing the values `}<inlineCode parentName=\"p\">{`your_listening_port`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`your_connecting_port`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`WSL2_IP_address`}</inlineCode>{`.  `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`netsh interface portproxy add v4tov4 listenport=<your_listening_port> listenaddress=0.0.0.0 connectport=<your_connecting_port> connectaddress=<WSL2_IP_address>\n`}</code></pre>\n        <p parentName=\"li\">{`For example, the command might look similar to:  `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`netsh interface portproxy add v4tov4 listenport=7443 listenaddress=0.0.0.0 connectport=7443  connectaddress=172.25.221.48\n`}</code></pre>\n      </li>\n    </ol>\n    <h2>{`Changing the admin password`}</h2>\n    <p>{`If you don’t want to use the default admin password for the Podman image, add the following line under the `}<inlineCode parentName=\"p\">{`environment`}</inlineCode>{` section in the `}<inlineCode parentName=\"p\">{`podman-compose yml`}</inlineCode>{` file before you start the environment:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`    - ADMIN_PASSWORD=<your_password>\n`}</code></pre>\n    <p>{`Replace `}<inlineCode parentName=\"p\">{`<your_password>`}</inlineCode>{` with your new password. `}</p>\n    <p>{` `}<strong parentName=\"p\">{`Note:`}</strong>{`  You can’t change the admin username. `}</p>\n    <h3>{`Updating the admin password after starting`}</h3>\n    <p>{`To update the admin password, you must restart the container because the Liberty server environment is not refreshed dynamically.`}</p>\n    <p>{`If you have an existing environment and you updated the `}<inlineCode parentName=\"p\">{`ADMIN_PASSWORD`}</inlineCode>{` variable in the `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` file, complete the following steps:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Run the `}<inlineCode parentName=\"li\">{`podman-compose down`}</inlineCode>{` command to stop and delete the environment.`}</li>\n      <li parentName=\"ol\">{`If you enabled persistence, find the `}<inlineCode parentName=\"li\">{`server.env`}</inlineCode>{` file under the env/ folder and delete the whole line that starts with `}<inlineCode parentName=\"li\">{`ADMIN_PASSWORD`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Run the  `}<inlineCode parentName=\"li\">{`podman-compose up`}</inlineCode>{` command to start the environment.`}</li>\n    </ol>\n    <h2>{`Persisting your data`}</h2>\n    <p>{`If you want to save the data and the process when you delete the container instance, and reuse it when you run another container instance, you can persist the data. Copy the contents of the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/icp4a/workflow-process-service-trial/blob/main/persistence/basic/docker-compose.yml\"\n      }}>{`docker-compose.yml`}</a>{` file with persistence to your local computer.`}</p>\n    <h4>{`For Linux only`}</h4>\n    <p>{`If you’re running Linux and using Podman as your container engine, make sure the folder has read-write permission from the container. The container user ID is 50001 and it belongs to the root group, so to change the folder’s permissions, run:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`sudo chown 50001:0 <current_sample_folder>\n`}</code></pre>\n      </li>\n    </ul>\n    <h4>{`For Windows only`}</h4>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Edit the `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` file device value to be the absolute path of the folder with the Podman Compose file. For example, if the absolute path is `}<inlineCode parentName=\"p\">{`c:\\\\ibm_desktop`}</inlineCode>{`:  `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`volumes:\n    pc_data: driver:\n    local driver_opts:\n    type: none\n    o: bind\n    device: \"/mnt/c/ibm_desktop\"\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Turn on Windows Subsystem for Linux (WSL) metadata support for your Window drive. Run the following command in WSL:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`sudo -e /etc/wsl.conf\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add the following configuration:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`{{[automount]\noptions = \"metadata\"}}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Restart your WSL by opening a PowerShell or Command Prompt as an administrator and running the following command:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`wsl --shutdown\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Start your WSL by opening your Linux distribution from the start menu.  `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Make sure that your container has read-write permissions for your folder. The container user ID is `}<inlineCode parentName=\"p\">{`50001`}</inlineCode>{` and it belongs to the root group. To change the folder’s permissions, run the following command in your WSL, replacing `}<inlineCode parentName=\"p\">{`your_folder`}</inlineCode>{`:  `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`sudo chown 50001:0 <your_folder>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Start your Podman machine by running the following:  `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`podman machine start\n`}</code></pre>\n      </li>\n    </ol>\n    <h4>{`For all platforms`}</h4>\n    <p>{`  Run the following command:    `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd <sample_folder_you_created>\npodman-compose up\n`}</code></pre>\n    <h4>{`Check the volumes`}</h4>\n    <p>{`When the Workflow Process Service Trial environment runs, data is persisted into Podman volumes that are automatically created by Podman Compose:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`the `}<inlineCode parentName=\"li\">{`pc_data`}</inlineCode>{` volume persists the data and logs of the Liberty server running Workflow Process Service`}</li>\n      <li parentName=\"ul\">{`the `}<inlineCode parentName=\"li\">{`postgres_data`}</inlineCode>{` volume persists the PostgreSQL data`}</li>\n    </ul>\n    <p>{`There are different data volumes based on the Podman Compose setting. To list the volumes, run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`podman volume ls\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` You can retrieve the actual location of the volume on your Podman host file system by running:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`podman volume inspect <folder_name>_pc_data\n`}</code></pre>\n    <h4>{`Accessing the container runtime data and configuration`}</h4>\n    <p>{`When persistence is enabled, the container runtime data and configuration are written to the host computer, in the folder where Podman Compose was started. This location is called `}<inlineCode parentName=\"p\">{`<local_workspace>`}</inlineCode>{` in the following example.`}</p>\n    <p>{`The structure looks like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<local_workspace>\n     |--cert-trusted\n     |--tls\n         |--key.p12\n         |--trusts.p12\n     |--config\n         |--liberty-custom.xml\n         |--workflow-custom.xml\n         |--custom-registry.xml\n     |--env\n         |--server.env\n     |--data\n          |--messaging\n          |--index\n     |--output\n          |--logs    \n          |--dump\n`}</code></pre>\n    <h2>{`Customizing the user registry`}</h2>\n    <p>{`Workflow Process Service Authoring has predefined users and groups. You can update the users and groups if you have persistence enabled. The custom registry is under `}<inlineCode parentName=\"p\">{`<local_workspace>`}</inlineCode>{`:\n`}<inlineCode parentName=\"p\">{`<local_workspace>/config/custom-registry.xml`}</inlineCode></p>\n    <p>{`Usernames and groups are listed in this file. If you update this file and don’t restart the container, the changes are applied to the server runtime in about one minute.`}</p>\n    <p>{`Make sure to use all-lowercase names for groups. Groups available in the registry are not immediately replicated to the product database. In order to use newly created groups, you can restart the environment or sign in as a user who is member of that group.`}</p>\n    <h2>{`Enabling full text search and dashboard support`}</h2>\n    <p>{`To access full text search, advanced filtering functions, and the Teams dashboard in Workplace, you must activate the IBM Process Federation Server (PFS) runtime, which requires Elasticsearch. The `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` file will deploy an additional Podman container running Elasticsearch.`}</p>\n    <p>{`Find the `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` file here: `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No persistence`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Persistence enabled`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`PFS enabled`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://github.com/icp4a/workflow-process-service-trial/blob/main/PFS/docker-compose.yml\"\n            }}>{`PFS/docker-compose.yml`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://github.com/icp4a/workflow-process-service-trial/blob/main/persistence/PFS/docker-compose.yml\"\n            }}>{`persistence/PFS/docker-compose.yml`}</a></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Copy the contents of the `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` file under the `}<inlineCode parentName=\"p\">{`PFS/`}</inlineCode>{` folder or `}<inlineCode parentName=\"p\">{`persistence/PFS`}</inlineCode>{` folder into a new file named `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` in the folder that you created.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`For Workflow Process Service Trial with the optional Process Federation Server enabled:`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`cd <your_pfs_yml_folder>/\npodman-compose up\n`}</code></pre>\n      </li>\n    </ul>\n    <p>{`If you already have an existing environment and you want to enable full text search and dashboard support:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Update your existing `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` file, and add the `}<inlineCode parentName=\"p\">{`elasticsearch`}</inlineCode>{` service from the `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` file above to your existing file.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Set the following environment variables in the `}<inlineCode parentName=\"p\">{`pc`}</inlineCode>{` service of your `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` file:  `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`      - PFS_ENABLE=true\n      - PFS_REMOTEELASTICSEARCH_ENDPOINTS=http://elasticsearch:9200\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`If persistence is enabled, declare the `}<inlineCode parentName=\"p\">{`elasticsearch_data`}</inlineCode>{` volume in the `}<inlineCode parentName=\"p\">{`volumes`}</inlineCode>{` section.`}</p>\n      </li>\n    </ol>\n    <p>{`When Process Federation Server is enabled and persistence is also enabled, the Elasticsearch data will be persisted in a volume named `}<inlineCode parentName=\"p\">{`elasticsearch_data`}</inlineCode>{`.`}</p>\n    <p>{` `}<strong parentName=\"p\">{`Note:`}</strong>{` Running Elasticsearch in addition to the Workflow Process Service container might cause resource issues. See `}<a parentName=\"p\" {...{\n        \"href\": \"/workflow-process-service-trial/troubleshooting-podman#container-exits-with-code-137-or-outofmemoryerror\"\n      }}>{`Container exits with code 137`}</a>{`.`}</p>\n    <h2>{`Cleaning up the environment`}</h2>\n    <p>{`To clean up the environment:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the `}<inlineCode parentName=\"p\">{`podman-compose down`}</inlineCode>{` command to stop and delete the environment.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`If you persisted the data, delete all the volumes created by Workflow Process Service Trial. Use `}<inlineCode parentName=\"p\">{`podman volume ls`}</inlineCode>{` to check the status of the volumes.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`To delete the volumes, run: `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`podman volume prune\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`Alternatively, you can delete them one at a time.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`When Process Federation Server is not enabled:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`podman volume rm <basic_folder_name>_pc_data\npodman volume rm <basic_folder_name>_postgres_data\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`When Process Federation Server is enabled:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`podman volume rm <pfs_folder_name>_pc_data\npodman volume rm <pfs_folder_name>_postgres_data\npodman volume rm <pfs_folder_name>_elasticsearch_data\n`}</code></pre>\n      </li>\n    </ul>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`If you persisted the data, delete all the folders under your local workspace: `}<inlineCode parentName=\"li\">{`config`}</inlineCode>{`,`}<inlineCode parentName=\"li\">{`output`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`env`}</inlineCode>{`,`}<inlineCode parentName=\"li\">{`tls`}</inlineCode>{`,`}<inlineCode parentName=\"li\">{`cert-trusted`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`data`}</inlineCode>{`.  `}</li>\n    </ol>\n    <h2>{`Overriding the Liberty default configuration`}</h2>\n    <p>{`To override the Liberty default configuration, you can provide your own Liberty configuration dropins. For more information, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/docs/en/was-liberty/base?topic=files-using-configuration-dropins-folder-specify-server-configuration\"\n      }}>{`Using the configuration dropins folder to specify server configuration`}</a>{`. Overriding is done by mounting configuration dropins in the form of XML files in the `}<inlineCode parentName=\"p\">{`/config/configDropins/overrides`}</inlineCode>{` folder. The `}<inlineCode parentName=\"p\">{`logging.xml`}</inlineCode>{` file is an example of a mounted file in `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{`. If you want to persist your data, edit the `}<inlineCode parentName=\"p\">{`liberty-custom.xml`}</inlineCode>{` file under the `}<inlineCode parentName=\"p\">{`./config`}</inlineCode>{` folder.`}</p>\n    <h2>{`Integrating with external services`}</h2>\n    <p>{`To integrate Workflow Process Service with an external service, you must exchange your TLS certificate with the external service. The certificates for Workflow Process Service must have either the `}<inlineCode parentName=\"p\">{`.pem`}</inlineCode>{` file format and a PEM encoded X509v3 certificate, or the `}<inlineCode parentName=\"p\">{`.crt`}</inlineCode>{` file format.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Import the certificate of an external service.`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`Get the signer certificate that is used to sign into your external service and save it to a certificate. For more information, see `}<a parentName=\"li\" {...{\n              \"href\": \"https://www.openssl.org/\"\n            }}>{`OpenSSL`}</a>{`. The following example commands use a certificate that is named `}<inlineCode parentName=\"li\">{`external-service-cert.crt.`}</inlineCode>{` The next example command gets the certificate chain of cloud.ibm.com by using OpenSSL:`}</li>\n        </ol>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`echo | openssl s_client -showcerts -connect cloud.ibm.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > external-service-cert.crt\n`}</code></pre>\n        <p parentName=\"li\">{`The following example command gets the certificate chain of `}<inlineCode parentName=\"p\">{`cloud.ibm.com`}</inlineCode>{` by using keytool:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`keytool -printcert -sslserver cloud.ibm.com:443 -rfc > external-service-cert.crt\n`}</code></pre>\n        <ol parentName=\"li\" {...{\n          \"start\": 2\n        }}>\n          <li parentName=\"ol\">{`Add the certificate to the trust list `}<inlineCode parentName=\"li\">{`cert-trusted/`}</inlineCode>{` by running the following command. The server must be running before you run this command.`}</li>\n        </ol>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`podman cp ./external-service-cert.crt pc:/shared/custom/cert-trusted\n`}</code></pre>\n        <ol parentName=\"li\" {...{\n          \"start\": 3\n        }}>\n          <li parentName=\"ol\">{`Stop and restart your environment by running the following commands:`}</li>\n        </ol>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`podman-compose stop\npodman-compose start\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`To export the root CA key and import it into the truststore of an external service, run the following command. The server must be running before you run this command.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`podman cp pc:/shared/custom/tls/ca_crt.pem .\n`}</code></pre>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";\nexport var text = \"PageHeader-module--text--Er2EO\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var text = \"last-modified-date-module--text--ogPQF\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils"],"sourceRoot":""}